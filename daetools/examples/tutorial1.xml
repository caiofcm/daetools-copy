<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="dae-tools.xsl"?>
<Model ID="28630800" Class="daeModel" Library="DAE.Core" Version="1.7.3">
  <Name><![CDATA[tutorial1]]></Name>
  <Description><![CDATA[
This tutorial introduces several new concepts:

- Distribution domains
- Distributed parameters, variables and equations
- Setting boundary conditions (Neumann and Dirichlet type)
- Setting initial conditions

In this example we model a simple heat conduction problem: a conduction through
a very thin, rectangular copper plate.

For this problem, we need a two-dimensional Cartesian grid (x,y)
(here, for simplicity, divided into 10 x 10 segments):

.. code-block:: none

     y axis
        ^
        |
    Ly -| L T T T T T T T T T R
        | L + + + + + + + + + R
        | L + + + + + + + + + R
        | L + + + + + + + + + R
        | L + + + + + + + + + R
        | L + + + + + + + + + R
        | L + + + + + + + + + R
        | L + + + + + + + + + R
        | L + + + + + + + + + R
        | L + + + + + + + + + R
     0 -| L B B B B B B B B B R
        --|-------------------|-------> x axis
          0                   Lx

Points 'B' at the bottom edge of the plate (for y = 0), and the points 'T' at the
top edge of the plate (for y = Ly) represent the points where the heat is applied.

The plate is considered insulated at the left (x = 0) and the right edges (x = Lx)
of the plate (points 'L' and 'R'). To model this type of problem, we have to write
a heat balance equation for all interior points except the left, right, top and
bottom edges, where we need to specify boundary conditions.

In this problem we have to define two distribution domains:

- x (x axis, length Lx = 0.1 m)
- y (y axis, length Ly = 0.1 m)

the following parameters:

- rho: copper density, 8960 kg/m3
- cp:  copper specific heat capacity, 385 J/(kgK)
- k:   copper heat conductivity, 401 W/(mK)
- Qb:  heat flux at the bottom edge, 1E6 W/m2 (or 100 W/cm2)
- Tt:  temperature at the top edge, 300 K

and a single variable:

- T: the temperature of the plate (distributed on x and y domains)

The model consists of 5 equations (1 distributed equation + 4 boundary conditions):

1) Heat balance::

    rho * cp * dT(x,y)/dt = k * [d2T(x,y)/dx2 + d2T(x,y)/dy2];  x in (0, Lx), y in (0, Ly)

2) Neumann boundary conditions at the bottom edge::

    -k * dT(x,y)/dy = Qb;  x in (0, Lx), y = 0

3) Dirichlet boundary conditions at the top edge::

    T(x,y) = Tt;  x in (0, Lx), y = Ly

4) Neumann boundary conditions at the left edge (insulated)::

    dT(x,y)/dx = 0;  y in [0, Ly], x = 0

5) Neumann boundary conditions at the right edge (insulated)::

    dT(x,y)/dx = 0;  y in [0, Ly], x = Lx

The temperature plot (at t=100s, x=0.5, y=*):

.. image:: _static/tutorial1-results.png
   :width: 500px
]]></Description>
  <Domains>
    <Object ID="140551733342512" Class="daeDomain" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[x]]></Name>
      <Description><![CDATA[X axis domain]]></Description>
      <Type>eStructuredGrid</Type>
      <Units>
        <m>1</m>
      </Units>
    </Object>
    <Object ID="140551733342816" Class="daeDomain" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[y]]></Name>
      <Description><![CDATA[Y axis domain]]></Description>
      <Type>eStructuredGrid</Type>
      <Units>
        <m>1</m>
      </Units>
    </Object>
  </Domains>
  <Parameters>
    <Object ID="28590360" Class="daeParameter" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[Q_b]]></Name>
      <Description><![CDATA[Heat flux at the bottom edge of the plate]]></Description>
      <Units>
        <W>1</W>
        <m>-2</m>
      </Units>
      <DomainRefs/>
    </Object>
    <Object ID="28631096" Class="daeParameter" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[T_t]]></Name>
      <Description><![CDATA[Temperature at the top edge of the plate]]></Description>
      <Units>
        <K>1</K>
      </Units>
      <DomainRefs/>
    </Object>
    <Object ID="28631544" Class="daeParameter" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[&rho;]]></Name>
      <Description><![CDATA[Density of the plate]]></Description>
      <Units>
        <kg>1</kg>
        <m>-3</m>
      </Units>
      <DomainRefs/>
    </Object>
    <Object ID="28632232" Class="daeParameter" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[c_p]]></Name>
      <Description><![CDATA[Specific heat capacity of the plate]]></Description>
      <Units>
        <J>1</J>
        <K>-1</K>
        <kg>-1</kg>
      </Units>
      <DomainRefs/>
    </Object>
    <Object ID="28632904" Class="daeParameter" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[&lambda;_p]]></Name>
      <Description><![CDATA[Thermal conductivity of the plate]]></Description>
      <Units>
        <K>-1</K>
        <W>1</W>
        <m>-1</m>
      </Units>
      <DomainRefs/>
    </Object>
  </Parameters>
  <Variables>
    <Object ID="28633600" Class="daeVariable" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[T]]></Name>
      <Description><![CDATA[Temperature of the plate]]></Description>
      <VariableType>temperature_t</VariableType>
      <DomainRefs>
        <ObjectRef ID="140551733342512"><![CDATA[x]]></ObjectRef>
        <ObjectRef ID="140551733342816"><![CDATA[y]]></ObjectRef>
      </DomainRefs>
    </Object>
  </Variables>
  <Ports/>
  <EventPorts/>
  <Equations>
    <Object ID="28637368" Class="daeEquation" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[HeatBalance]]></Name>
      <Description><![CDATA[Heat balance equation valid on open x and y domains]]></Description>
      <EquationType>eImplicitODE</EquationType>
      <Residual>$${ \left( { \left( { { \rho }  \cdot { c_p } }  \right)  \cdot \left( { { \partial { { \left( { T \left( { x, y } \right) }  \right) }  } } \over { \partial { t  } } }  \right) }  \right)  - \left( { { \lambda_p }  \cdot \left( { \left( { { \partial { ^2 { \left( { T \left( { x, y } \right) }  \right) } } } \over { \partial {x ^2} } }  \right)  + \left( { { \partial { ^2 { \left( { T \left( { x, y } \right) }  \right) } } } \over { \partial {y ^2} } }  \right) }  \right) }  \right) }  = 0; {\forall { x }  \in \left( { x } _{0}, { x } _{n} \right) }, {\forall { y }  \in \left( { y } _{0}, { y } _{n} \right) }$$</Residual>
      <DistributedDomainInfos>
        <Object ID="28632536" Class="daeDistributedEquationDomainInfo" Library="DAE.Core" Version="1.7.3">
          <Name><![CDATA[x]]></Name>
          <Description><![CDATA[]]></Description>
          <Domain ID="140551733342512"><![CDATA[x]]></Domain>
          <Type>eOpenOpen</Type>
        </Object>
        <Object ID="28638936" Class="daeDistributedEquationDomainInfo" Library="DAE.Core" Version="1.7.3">
          <Name><![CDATA[y]]></Name>
          <Description><![CDATA[]]></Description>
          <Domain ID="140551733342816"><![CDATA[y]]></Domain>
          <Type>eOpenOpen</Type>
        </Object>
      </DistributedDomainInfos>
    </Object>
    <Object ID="28610088" Class="daeEquation" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[BC_bottom]]></Name>
      <Description><![CDATA[Neumann boundary conditions at the bottom edge (constant flux)]]></Description>
      <EquationType>eAlgebraic</EquationType>
      <Residual>$${ \left( { \left( { \left( - { \lambda_p }  \right) }  \right)  \cdot \left( { { \partial { { \left( { T \left( { x, y } \right) }  \right) } } } \over { \partial {y} } }  \right) }  \right)  - { Q_b } }  = 0; {\forall { x }  \in \left( { x } _{0}, { x } _{n} \right) }, {{ y }  = { y } _{0}}$$</Residual>
      <DistributedDomainInfos>
        <Object ID="28610696" Class="daeDistributedEquationDomainInfo" Library="DAE.Core" Version="1.7.3">
          <Name><![CDATA[x]]></Name>
          <Description><![CDATA[]]></Description>
          <Domain ID="140551733342512"><![CDATA[x]]></Domain>
          <Type>eOpenOpen</Type>
        </Object>
        <Object ID="28610904" Class="daeDistributedEquationDomainInfo" Library="DAE.Core" Version="1.7.3">
          <Name><![CDATA[y]]></Name>
          <Description><![CDATA[]]></Description>
          <Domain ID="140551733342816"><![CDATA[y]]></Domain>
          <Type>eLowerBound</Type>
        </Object>
      </DistributedDomainInfos>
    </Object>
    <Object ID="28903480" Class="daeEquation" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[BC_top]]></Name>
      <Description><![CDATA[Dirichlet boundary conditions at the top edge (constant temperature)]]></Description>
      <EquationType>eAlgebraic</EquationType>
      <Residual>$${ { T \left( { x, y } \right) }  - { T_t } }  = 0; {\forall { x }  \in \left( { x } _{0}, { x } _{n} \right) }, {{ y }  = { y } _{n}}$$</Residual>
      <DistributedDomainInfos>
        <Object ID="28903688" Class="daeDistributedEquationDomainInfo" Library="DAE.Core" Version="1.7.3">
          <Name><![CDATA[x]]></Name>
          <Description><![CDATA[]]></Description>
          <Domain ID="140551733342512"><![CDATA[x]]></Domain>
          <Type>eOpenOpen</Type>
        </Object>
        <Object ID="28903896" Class="daeDistributedEquationDomainInfo" Library="DAE.Core" Version="1.7.3">
          <Name><![CDATA[y]]></Name>
          <Description><![CDATA[]]></Description>
          <Domain ID="140551733342816"><![CDATA[y]]></Domain>
          <Type>eUpperBound</Type>
        </Object>
      </DistributedDomainInfos>
    </Object>
    <Object ID="28904168" Class="daeEquation" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[BC_left]]></Name>
      <Description><![CDATA[Neumann boundary conditions at the left edge (insulated)]]></Description>
      <EquationType>eAlgebraic</EquationType>
      <Residual>$${ { \partial { { \left( { T \left( { x, y } \right) }  \right) } } } \over { \partial {x} } }  = 0; {{ x }  = { x } _{0}}, {\forall { y }  \in \left[ { y } _{0}, { y } _{n} \right] }$$</Residual>
      <DistributedDomainInfos>
        <Object ID="28904376" Class="daeDistributedEquationDomainInfo" Library="DAE.Core" Version="1.7.3">
          <Name><![CDATA[x]]></Name>
          <Description><![CDATA[]]></Description>
          <Domain ID="140551733342512"><![CDATA[x]]></Domain>
          <Type>eLowerBound</Type>
        </Object>
        <Object ID="28904584" Class="daeDistributedEquationDomainInfo" Library="DAE.Core" Version="1.7.3">
          <Name><![CDATA[y]]></Name>
          <Description><![CDATA[]]></Description>
          <Domain ID="140551733342816"><![CDATA[y]]></Domain>
          <Type>eClosedClosed</Type>
        </Object>
      </DistributedDomainInfos>
    </Object>
    <Object ID="28904856" Class="daeEquation" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[BC_right]]></Name>
      <Description><![CDATA[Neumann boundary conditions at the right edge (insulated)]]></Description>
      <EquationType>eAlgebraic</EquationType>
      <Residual>$${ { \partial { { \left( { T \left( { x, y } \right) }  \right) } } } \over { \partial {x} } }  = 0; {{ x }  = { x } _{n}}, {\forall { y }  \in \left[ { y } _{0}, { y } _{n} \right] }$$</Residual>
      <DistributedDomainInfos>
        <Object ID="28905176" Class="daeDistributedEquationDomainInfo" Library="DAE.Core" Version="1.7.3">
          <Name><![CDATA[x]]></Name>
          <Description><![CDATA[]]></Description>
          <Domain ID="140551733342512"><![CDATA[x]]></Domain>
          <Type>eUpperBound</Type>
        </Object>
        <Object ID="28905384" Class="daeDistributedEquationDomainInfo" Library="DAE.Core" Version="1.7.3">
          <Name><![CDATA[y]]></Name>
          <Description><![CDATA[]]></Description>
          <Domain ID="140551733342816"><![CDATA[y]]></Domain>
          <Type>eClosedClosed</Type>
        </Object>
      </DistributedDomainInfos>
    </Object>
  </Equations>
  <OnEventActions/>
  <OnConditionActions/>
  <STNs/>
  <PortConnections/>
  <EventPortConnections/>
  <Components/>
  <ComponentsArrays/>
  <PortArrays/>
</Model>
