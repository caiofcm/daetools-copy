<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="dae-tools.xsl"?>
<Model ID="34629664" Class="daeModel" Library="DAE.Core" Version="1.7.3">
  <Name><![CDATA[tutorial_adv_1]]></Name>
  <Description><![CDATA[
This tutorial presents a user-defined simulation which instead of simply integrating
the system shows the pyQt graphical user interface (GUI) where the simulation can be
manipulated (a sort of interactive operating procedure).

The model in this example is the same as in the tutorial 4.

The simulation.Run() function is modifed to show the graphical user interface (GUI)
that allows to specify the input power of the heater (degree of freedom), a time period
for integration, and a reporting interval. The GUI also contains the temperature plot
updated in real time, as the simulation progresses.

The screenshot of the pyQt GUI:

.. image:: _static/tutorial_adv_1-screenshot.png
   :width: 500px
]]></Description>
  <Domains/>
  <Parameters>
    <Object ID="34628088" Class="daeParameter" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[m]]></Name>
      <Description><![CDATA[Mass of the copper plate]]></Description>
      <Units>
        <kg>1</kg>
      </Units>
      <DomainRefs/>
    </Object>
    <Object ID="34631496" Class="daeParameter" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[c_p]]></Name>
      <Description><![CDATA[Specific heat capacity of the plate]]></Description>
      <Units>
        <J>1</J>
        <K>-1</K>
        <kg>-1</kg>
      </Units>
      <DomainRefs/>
    </Object>
    <Object ID="34632104" Class="daeParameter" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[&alpha;]]></Name>
      <Description><![CDATA[Heat transfer coefficient]]></Description>
      <Units>
        <K>-1</K>
        <W>1</W>
        <m>-2</m>
      </Units>
      <DomainRefs/>
    </Object>
    <Object ID="34632504" Class="daeParameter" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[A]]></Name>
      <Description><![CDATA[Area of the plate]]></Description>
      <Units>
        <m>2</m>
      </Units>
      <DomainRefs/>
    </Object>
    <Object ID="34632872" Class="daeParameter" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[T_surr]]></Name>
      <Description><![CDATA[Temperature of the surroundings]]></Description>
      <Units>
        <K>1</K>
      </Units>
      <DomainRefs/>
    </Object>
  </Parameters>
  <Variables>
    <Object ID="34633616" Class="daeVariable" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[Q_in]]></Name>
      <Description><![CDATA[Power of the heater]]></Description>
      <VariableType>power_t</VariableType>
      <DomainRefs/>
    </Object>
    <Object ID="34634224" Class="daeVariable" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[T]]></Name>
      <Description><![CDATA[Temperature of the plate]]></Description>
      <VariableType>temperature_t</VariableType>
      <DomainRefs/>
    </Object>
  </Variables>
  <Ports/>
  <EventPorts/>
  <Equations>
    <Object ID="34911400" Class="daeEquation" Library="DAE.Core" Version="1.7.3">
      <Name><![CDATA[HeatBalance]]></Name>
      <Description><![CDATA[Integral heat balance equation]]></Description>
      <EquationType>eImplicitODE</EquationType>
      <Residual>$${ \left( { \left( { \left( { { m }  \cdot { c_p } }  \right)  \cdot \left( { { \partial { { \left( { T }  \right) }  } } \over { \partial { t  } } }  \right) }  \right)  - { Q_in } }  \right)  + \left( { \left( { { \alpha }  \cdot { A } }  \right)  \cdot \left( { { T }  - { T_surr } }  \right) }  \right) }  = 0$$</Residual>
      <DistributedDomainInfos/>
    </Object>
  </Equations>
  <OnEventActions/>
  <OnConditionActions/>
  <STNs/>
  <PortConnections/>
  <EventPortConnections/>
  <Components/>
  <ComponentsArrays/>
  <PortArrays/>
</Model>
